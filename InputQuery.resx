<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTEwBTExMA0xMTAdMTEwITExMCExM
        TAhMTEwITExMCExMTAhMTEwITExMCExMTAhMTEwITExMCExMTAhMTEwITExMCExMTAhMTEwITExMCExM
        TAhMTEwITExMCExMTAhMTEwITExMCExMTAhMTEwITExMCExMTAhMTEwITExMCExMTAhMTEwITExMCExM
        TAhMTEwITExMCExMTAhMTEwFTExMAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGBgUGBgYWBgYGLQYG
        Bj0GBgZCBgYGQwYGBkMGBgZDBgYGQwYGBkMGBgZDBgYGQwYGBkMGBgZDBgYGQwYGBkMGBgZDBgYGQwYG
        BkMGBgZDBgYGQwYGBkMGBgZDBgYGQwYGBkMGBgZDBgYGQwYGBkMGBgZDBgYGQwYGBkMGBgZDBgYGQwYG
        BkMGBgZDBgYGQwYGBkMGBgZDBgYGQgYGBkAGBgY1BgYGIAYGBgsGBgYBAAAAAAAAAAAAAAAAAgICBgMD
        AyUJCQliDw8PnxISErQTExO3ExMTtxMTE7cTExO3ExMTtxMTE7cTExO3ExMTtxMTE7cTExO3ExMTtxMT
        E7cTExO3ExMTtxMTE7cTExO3ExMTtxMTE7cTExO3ExMTtxMTE7cTExO3ExMTtxMTE7cTExO3ExMTtxMT
        E7cTExO3ExMTtxMTE7cTExO3ExMTtxMTE7cTExO3ExMTtxAQELMLCwuZBQUFbQAAADkAAAAPDw8PAQAA
        AAAZGRkCBwcHHBMTE5VoaGjxoqKi+Le3t/u4uLj6t7e3+ri4uPq5ubn7ubm5+rq6uvq6urr7u7u7+rq6
        uvq6urr7ubm5+rq6uvq6urr7urq6+rm5ufu7u7v6vLy8+r6+vvu/v7/6v7+/+r+/v/u/v7/6v7+/+r+/
        v/u/v7/6v7+/+r+/v/q/v7/7v7+/+r+/v/q/v7/7v7+/+r+/v/q/v7/7vb29+rCwsPqBgYH4KCgo2ggI
        CH8AAAAyDw8PBgAAAAAbGxsJEhISdZCQkPbJycn9tbW1/ri4uP6pqan+m5ub/p6env6ysrL+ra2t/rCw
        sP7BwcH+tbW1/sTExP6mpqb+sbGx/q6urv68vLz+srKy/rKysv6ysrL+0NDQ/uPj4/7k5OT+5OTk/uTk
        5P7k5OT+5OTk/uTk5P7k5OT+5OTk/uTk5P7k5OT+5OTk/uTk5P7k5OT+5OTk/uTk5P7j4+P+4uLi/t3d
        3f7S0tL+tbW1+ykpKdcFBQVaDw8PEwAAAAAfHx8RTk5O1snJyfzc3Nz+vLy8/sjIyP6/v7/+xMTE/sLC
        wv6+vr7+xMTE/sXFxf7Kysr+vb29/s/Pz/7FxcX+t7e3/sPDw/7Dw8P+yMjI/sPDw/7FxcX+2NjY/uzs
        7P7s7Oz+6enp/uTk5P7f39/+3Nzc/tzc3P7d3d3+4eHh/ubm5v7r6+v+7e3t/u3t7f7t7e3+7e3t/u3t
        7f7s7Oz+6+vr/ujo6P7j4+P+09PT/oSEhPcLCwuDDw8PHpqamgEhISEkd3d38snJyf3Y2Nj+3d3d/t/f
        3/7i4uL+5ubm/uvr6/7t7e3+7u7u/u7u7v7u7u7+7u7u/u7u7v7u7u7+7e3t/u3t7f7u7u7+7u7u/u7u
        7v7v7+/+8PDw/u3t7f7m5ub+ysrK/omJif5dXV3+RkZG/kBAQP5KSkr+aWlp/qCgoP7b29v+6enp/vDw
        8P7y8vL+8vLy/vLy8v7x8fH+8fHx/u7u7v7o6Oj+3d3d/ra2tvkRERGfDw8PI5qamgEfHx8sPj4+82Nj
        Y/5sbGz+b29v/nJycv51dXX+mZmZ/tjY2P7r6+v+8fHx/vDw8P7r6+v+5+fn/urq6v7v7+/+9PT0/vT0
        9P709PT+9PT0/vT09P7y8vL+7Ozs/tjY2P5xcXH+Kysr/iQkJP4fHx/+GRkZ/hUVFf4UFBT+FRUV/hcX
        F/4zMzP+nZ2d/uXl5f7v7+/+8/Pz/vPz8/7z8/P+8/Pz/vHx8f7s7Oz+4+Pj/sLCwvkTExOkDw8PJJqa
        mgEcHBwsGRkZ9DExMf43Nzf+Ojo6/j09Pf5BQUH+QEBA/kFBQf6qqqr+6enp/t/f3/6ZmZn+aGho/n5+
        fv7t7e3+9PT0/vT09P709PT+9PT0/vPz8/7s7Oz+xcXF/kFBQf4qKir+IiIi/h0dHf4aGhr+GRkZ/hYW
        Fv4TExP+Dw8P/gwMDP4NDQ3+FRUV/mtra/7h4eH+8PDw/vT09P709PT+8/Pz/vHx8f7t7e3+5eXl/sTE
        xPoUFBSkDw8PJJqamgEbGxssFxYX8y0tLf4yMzP+NjY2/jk5Of47Ozv+PT09/kJCQv49PT3+uLi4/tDQ
        0P6ZmZn+RkZG/pOTk/7r6+v+9PT0/vT09P709PT+9PT0/u7u7v7Ly8v+PDw8/i0tLf4lJSX+IyMi/iMj
        I/4tLS3+NjY2/jo6Of45ODj+Kioq/hQUFP4NDQ3+DAwM/hQUFP5oaGj+5eXl/vHx8f709PT+8/Pz/vLy
        8v7t7e3+5eXl/sXFxfkUFBSkDw8PJJqamgEbGxssFhYW8y0tLf4zMzP+NjY2/jk5Of48Ozz+Pj4+/kBA
        QP5FRUX+XFtb/t7e3v6ysrL+rq6u/q+vr/7q6ur+9PT0/vT09P709PT+8fHx/uPj4/5TU1P+MjIy/ioq
        Kv4nJyf+LCwr/js5OP42MTD+PTMv/kk7Nv5BOjf+T0tK/lBPTv4jIyP+Dw8P/g0NDf4XFxf+lJSU/urq
        6v709PT+9PT0/vLy8v7t7e3+5eXl/sXFxfkUFBSkDw8PJJqamgEbGxssFhYW9C0tLf4zMzP+NjY2/jk5
        Of48PDz+Pj4+/kFBQf5BQUH+Pj4+/s7Ozv6wsLD+TU1N/m5ubv7q6ur+9PT0/vT09P709PT+7Ozs/pyc
        nP40NDT+Ly8v/isrK/4sKyv+MS0s/j0mIP6ASTv+q2hT/rp4YP69f2b+iF9O/kk/O/5aWFf+JSUl/hAQ
        EP4RERH+Li4u/tjY2P7x8fH+9PT0/vLy8v7t7e3+5eXl/sXFxfoUFBSkDw8PJJqamgEbGxssFhYW8y0t
        Lf4zMzP+NjY2/jk5Of48PDz+Pj4+/kFBQf5AQED+QUFB/ry8vP6UlJT+ZWVl/oWFhf7o6Oj+9PT0/vT0
        9P709PT+5OTk/lNTU/42Njb+MDAw/isqKv4sKCf+Ph8Z/opDNP6gVUP+sWdR/sB3X/7Kgmj+zIlu/rJ7
        ZP5KPzv+VFJR/hsbG/4TExP+HBwc/pSUlP7s7Oz+9PT0/vLy8v7t7e3+5eXl/sXFxfkUFBSkDw8PJJqa
        mgEbGxssFhYW9C0tLf4zMzP+NjY2/jk5Of48PDz+Pj4+/kFBQf5BQUH+QUFB/rq6uv7Pz8/+jo6O/oeH
        h/7p6en+9PT0/vT09P7y8vL+z8/P/jc3N/41NTX+MjIy/igmJv4mGBb+dC4j/oxBMf6dUUD+rWRR/rt2
        Yf7GhG3+zY12/suPef6XcGH+YV5d/klISP4uLi7+Li4u/mVlZf7o6Oj+9PT0/vLy8v7t7e3+5eXl/sXF
        xfoUFBSkDw8PJJqamgEbGxssFhYW8y0tLf4zMzP+NjY2/jk5Of48PDz+Pj4+/kFBQf5BQUH+QUFB/ru7
        u/6SkpL+fX19/oSEhP7q6ur+9PT0/vT09P7v7+/+rKys/jw8PP42Njb+MDAw/ickJP49GBT+fDUr/pRP
        Q/6kZFf+sHJj/rl8bP7BhXP+xot4/seOe/6+iXj+Z15b/mVkZP5HR0f+RkZG/mBgYP7m5ub+9fX1/vPz
        8/7u7u7+5eXl/sbGxvkUFBSkDw8PJJqamgEbGxssFhYW8y0tLf4zMzP+NjY2/jk5Of48Ozz+Pj4+/kFA
        Qf5BQUH+QUFB/ru7u/6pqan+WFhY/pOTk/7o6On+8/Pz/vPz8/7s7Oz+np6e/kJCQv46Ojr+NDQ0/jcz
        M/5mPzr+j1NL/pteVf6kaF3+rHFl/rN5a/65f3H+voR1/sCHd/65hXb+eGdj/m9ubv5VVVX+UlJS/mFh
        Yf7n5+f+9vb2/vX19f7x8fH+6enp/sbGxvkUFBSkDw8PJJqamgEbGxssFhYW9C0tLf4zMzP+NjY2/jk5
        Of48Ozz+Pj4+/kFAQf5BQUH+QUFB/rq6uv68vLz+bm5u/n19ff7r6+v+8vLy/vLy8v7s7e3+oqKi/kZG
        Rv5OTk7+X19f/l1aWv50UU7+klpT/ptiWv6iaWD+qHBm/q52a/6ze2/+tn9z/riBdf6yf3T+eWpm/nR0
        c/5hYWH+X19f/m1tbf7p6en+9vb2/vT09P7x8fH+6+vr/sbGxvoUFBSkDw8PJJqamgEbGxssGBgY8zEx
        MP42Njb+ODg4/jk5Of48PDz+Pj4+/kBAQf5BQUH+QUFB/rq6uv6hoaH+pKSk/tzc3P7o6ej+8fHx/vHx
        8f7t7u7+v7+//m9vb/55eXn+eHh4/mlnZ/5yXFr+k2Bb/ptlX/6ha2T+pnBo/qp1bP6ueXD+sXxy/rF9
        c/6ne3L+dXBv/nd3d/5sbGz+bW1s/oODg/7q6ur+9fX1/vT09P7x8fH+6+vr/sXFxfkUFBSkDw8PJJqa
        mgEbGxssGhoa811dXf5hYWD+UFBQ/kJCQv5CQkL+Q0ND/kRERP5ERET+Q0ND/ri4uP7Av7/+X19f/oOD
        g/7o6ej+8fHx/vLy8v7y8vL+4+Pj/oaGhv6IiIj+hoaG/nd2dv5wa2r+j2dk/pxqZv6hbmn+pXJs/qh2
        b/6reXL+rHt0/qt8df6LdHD+g4GA/nt7e/54eHj+e3t7/qKiov7t7e3+9PT0/vPz8/7w8PD+6+vr/sTE
        xPkUFBSkDw8PJJqamgEbGxssHBwc9Gtra/6FhYX+h4eH/oSEhP55eXn+cHBw/mpqav5lZWX+Y2Nj/sTE
        xP6oqKj+xMTE/qSkpP7r6+v+8/Pz/vPz8/7z8/P+7Ozs/qenp/6UlJT+kZGR/ouLi/59fHv+fXNz/phx
        b/6hdHD+pHdy/qd5df6oe3b+qH14/pZ6d/6FgYH+iIiH/oWFhf6FhYX+hoaG/szMzP7w8PD+8/Pz/vLy
        8v7w8PD+7Ovr/sTExPoUFBSkDw8PJJqamgEbGxssHh0d83Nzc/6RkZH+lZWV/paWlv6Xl5f+l5eX/piY
        l/6Xl5f+l5eX/tTU1P7Z2dn+rq6u/tPT0/7t7u7+8/Pz/vPz8/7z8/P+7+/v/tfX1/6ZmZn+nJyc/pqa
        mv6SkpL+iIaG/oaAgP6RfXz+nH58/p+Aff6bgH3+j4GA/o2Kiv6RkJD+kZGR/pCQkP6SkpL+oaGh/urq
        6v7y8vL+8/Pz/vLy8v7w8PD+6+vr/sPDw/kTExOkDw8PJJqamgEbGxssHh4e83t7e/6bm5v+n5+f/qCg
        oP6ioqL+o6Oj/qSkpP6lpaX+pKSk/tnZ2f7T09P+rq6u/r6+vv7v7+/+8/Pz/vPz8/7z8/P+8vLy/u3t
        7f69vb3+paWl/qWlpf6jo6P+np6e/pWVlP6TkpH+k5CQ/pSRkf6Vk5L+mJaW/pqZmf6cnJz+nJyc/p2d
        nf6dnZ3+2tra/u/v7/7z8/P+8vLy/vLy8v7w8PD+6+vr/sLCwvkTExOkDw8PJJqamgEbGxssHx8f9IKC
        gv6lpaX+qamp/qqqqv6rq6v+rKys/q2trf6urq7+rKys/tzc3P7Ozs7+ycnJ/s3Nzf7v7+/+8vLy/vLy
        8v7y8vL+8vLy/vHx8f7r6+v+ubm5/q6urv6urq7+ra2t/qurq/6oqKj+paWl/qWlpf6mpqb+qKio/qio
        qP6oqKj+qamp/qenp/7R0dH+7u7u/vLy8v7y8vL+8vLy/vHx8f7w8PD+7Ozs/sHBwfoTExOkDw8PJJqa
        mgEbGxssHx8f84mJif6urq7+srKy/rOzs/60tLT+tbW1/ra2tv62trb+tbW1/ufn5/7g4OD+xMTE/tra
        2v7v7+/+8vLy/vLy8v7y8vL+8vLy/vLy8v7w8PD+6+vr/sbGxv60tLT+uLi4/re3t/62trb+tbW1/rW1
        tf60tLT+tLS0/rOzs/6zs7P+s7Oz/tjY2P7t7e3+7+/v/u/v7/7w8PD+7+/v/vDw8P7w8PD+7e3t/sDA
        wPkTExOkDw8PJJqamgEbGxssICAg84+Pj/63t7f+u7u7/r29vf69vr7+vr6+/r6+vv7AwMD+ycnJ/u3t
        7f7d3d3+wcHB/srKyv7v7+/+8vLy/vLy8v7y8vL+8/Pz/vLy8v7y8vL+8fHx/u7u7v7e3t7+xcXF/r29
        vf6/v7/+wcHB/sHBwf6/v7/+vb29/r29vf7MzMz+5+fn/u7u7v7n5+f+3Nzc/tvb2/7b29v+29vb/uLi
        4v7v7+/+7Ozs/r+/v/kTExOkDw8PJJqamgEbGxssISEh85aWlv7AwMD+xMTE/sXFxf7Gxsb+xsfH/sjI
        yP7Gxsb+6enp/vDw8P7c3Nz+0NDQ/tnZ2f7w8fD+8/Pz/vPz8/7z8/P+8/Pz/vPz8/7z8/P+8/Pz/vPy
        8/7x8fH+7u7u/ujo6P7d3d3+1tbW/tbW1v7Y2Nj+4ODg/uzs7P7w8O/+8PDw/t/f3/7i4uL+8vLy/vT0
        9P709PT+9PT0/ufn5/7Z2dn+7Ozs/r6+vvkTExOkDw8PJJqamgEdHR0sIyMj9J+fn/7Kysr+zs7O/s/P
        z/7Pz8/+zs7O/tPT0/7p6en+8vLy/vPz8/7x8fH+6+vr/vHx8f7z8/P+9PT0/vT09P709PT+9PT0/vT0
        9P709PT+9PT0/vT09P709PT+8/Pz/vPz8/7y8vL+8fHx/vHx8f7x8fH+8vLy/vPz8/7z8/P+7+/v/uTk
        5P74+Pj++vr6/vv7+/77+/v++/v7/vn5+f7u7u7+4eHh/ry8vPoTExOjDw8PI5qamgEgICArV1dX88HB
        wf7h4eH+4+Pj/uPj4/7k5OT+6+vr/vLy8v709PT+9fT1/vX19f719fX+9fX1/vX19f719fX+9fX1/vX1
        9f719fX+9fX1/vX19f719fX+9fX1/vX19f719fX+9fX1/vX19f719fX+9fX1/vX19f719fX+9fX1/vX1
        9f719fX+7+/v/uzs7P76+vr+/Pz8/v39/f79/f3+/Pz8/vv7+/719fX+4+Pj/ru7u/kSEhKfDw8PH5qa
        mgEhISEgdnZ28tfX1/3y8vL+9fX1/vX19f719fX+9vb2/vb29v729vb+9/b3/vf29/739vf+9/f3/vf3
        9/739/f+9/f3/vf39/739vf+9/b3/vf29/739/b+9/f2/vb39v729/f+9vf3/vf29v739vb+9/b2/vf3
        9/739/f+9/f3/vf39/729vb+9fX1/unp6f729vb+/Pz8/vz8/P78/Pz+/Pz8/vn5+f7p6en+6urq/qys
        rPgQEBCNDw8PFQAAAAAfHx8JS0tL08fHx/vx8fH+9vb2/vf39/74+Pj++Pj4/vj4+P74+Pj++Pj4/vj4
        +P74+Pj++Pj4/vj4+P74+Pj++Pj4/vj4+P74+Pj++Pj4/vj4+P74+Pj++Pj4/vj4+P74+Pj++Pj4/vj4
        +P74+Pj++Pj4/vj4+P74+Pj++Pj4/vj4+P74+Pj+9/f3/vf39/7v7+/+7+/v/vDw8P7w8PD+8PDw/u3t
        7f7y8vL+2NjY/X9/f/QKCgpUDw8PCAAAAAAbGxsEEhISYoqKivTNzc386enp/fLy8v719fX+9/f3/vj4
        +P75+fn++fn5/vn5+f75+fn++fn5/vf39/729vb+9PT0/vT09P709PT+9PT0/vT09P709PT+9PT0/vT0
        9P709PT+9PT0/vT09P709PT+9PT0/vT09P709PT+9PT0/vT09P709PT+9PT0/vT09P7z8/P+8/Pz/vPz
        8/7z8/P+8vLy/uzs7P7Y2Nj9ra2t+CgoKLUFBQUTDw8PAQAAAAAfHx8BDQ0NBxkZGXJra2vroqKi9bi4
        uPi7u7v60tLS/O/v7/7z8/P+9PT0/vT09P709PT+8fHx/uPj4/2/v7/8urq6+bu7u/e7u7v3u7u79ru7
        u/e7u7v2u7u79ru7u/e7u7v2u7u79ru7u/e7u7v2u7u79ru7u/e7u7v2u7u79ru7u/a7u7v3u7u79ru7
        u/a7u7v3u7u79ru7u/a7u7v3urq69q2trfWCgoLzLS0trg0NDRwHBwcDAAAAAAAAAAAAAAAAT09PAVBQ
        UAVWVlYcW1tbWF1dXWpJSUmvYmJi96mpqfuzs7P7s7Oz+7Ozs/uzs7P7sLCw+4KCgvlGRkboXFxcb19f
        X2lfX19pX19faV9fX2lfX19pX19faV9fX2lfX19pX19faV9fX2lfX19pX19faV9fX2lfX19pX19faV9f
        X2lfX19pX19faV9fX2lfX19pX19faV9fX2lfX19pX19faV1dXWJYWFg0UlJSCE5OTgMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADt7e0B7OzsA+vr6wXd3d0WgYGBl35+fraBgYG3goKCt4KCgreCgoK3gICAt3t7
        e7G2trZH6enpCOzs7ATt7e0E7OzsBO3t7QTs7OwE7OzsBO3t7QTs7OwE7OzsBO3t7QTs7OwE7OzsBO3t
        7QTs7OwE7OzsBOzs7ATt7e0E7OzsBOzs7ATt7e0E7OzsBOzs7ATt7e0E7OzsBOzs7APt7e0CAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5+fkC9PT0BfDw8Ajx8fEI8PDwCPDw
        8Ajx8fEI8PDwCPLy8gb4+PgD/Pz8AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAOAAAAAADwAAwAAAAAADAACAAAAAAAEAAAAA
        AAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAADAACAAAAAAAcAAOAA
        AAAAHwAA/AB/////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>